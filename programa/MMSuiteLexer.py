# Generated from MMSuite.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,20,148,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,
        1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
        1,9,1,9,1,10,4,10,76,8,10,11,10,12,10,77,1,11,4,11,81,8,11,11,11,
        12,11,82,1,11,1,11,4,11,87,8,11,11,11,12,11,88,3,11,91,8,11,1,12,
        1,12,5,12,95,8,12,10,12,12,12,98,9,12,1,13,1,13,1,13,5,13,103,8,
        13,10,13,12,13,106,9,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,3,16,124,8,16,1,17,1,17,
        1,17,1,17,1,17,3,17,131,8,17,1,18,1,18,1,18,1,19,1,19,5,19,138,8,
        19,10,19,12,19,141,9,19,1,19,1,19,1,20,1,20,1,20,1,20,0,0,21,1,1,
        3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,0,39,19,41,20,1,0,7,2,0,65,90,97,122,
        4,0,48,57,65,90,95,95,97,122,2,0,39,39,92,92,2,0,43,43,45,45,2,0,
        42,42,47,47,1,0,10,10,3,0,9,10,13,13,32,32,160,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,1,43,1,0,0,0,3,45,1,0,
        0,0,5,50,1,0,0,0,7,52,1,0,0,0,9,54,1,0,0,0,11,56,1,0,0,0,13,59,1,
        0,0,0,15,61,1,0,0,0,17,63,1,0,0,0,19,68,1,0,0,0,21,75,1,0,0,0,23,
        80,1,0,0,0,25,92,1,0,0,0,27,99,1,0,0,0,29,109,1,0,0,0,31,111,1,0,
        0,0,33,123,1,0,0,0,35,130,1,0,0,0,37,132,1,0,0,0,39,135,1,0,0,0,
        41,144,1,0,0,0,43,44,5,44,0,0,44,2,1,0,0,0,45,46,5,102,0,0,46,47,
        5,117,0,0,47,48,5,110,0,0,48,49,5,99,0,0,49,4,1,0,0,0,50,51,5,40,
        0,0,51,6,1,0,0,0,52,53,5,41,0,0,53,8,1,0,0,0,54,55,5,61,0,0,55,10,
        1,0,0,0,56,57,5,105,0,0,57,58,5,102,0,0,58,12,1,0,0,0,59,60,5,123,
        0,0,60,14,1,0,0,0,61,62,5,125,0,0,62,16,1,0,0,0,63,64,5,101,0,0,
        64,65,5,108,0,0,65,66,5,115,0,0,66,67,5,101,0,0,67,18,1,0,0,0,68,
        69,5,119,0,0,69,70,5,104,0,0,70,71,5,105,0,0,71,72,5,108,0,0,72,
        73,5,101,0,0,73,20,1,0,0,0,74,76,2,48,57,0,75,74,1,0,0,0,76,77,1,
        0,0,0,77,75,1,0,0,0,77,78,1,0,0,0,78,22,1,0,0,0,79,81,2,48,57,0,
        80,79,1,0,0,0,81,82,1,0,0,0,82,80,1,0,0,0,82,83,1,0,0,0,83,90,1,
        0,0,0,84,86,5,46,0,0,85,87,2,48,57,0,86,85,1,0,0,0,87,88,1,0,0,0,
        88,86,1,0,0,0,88,89,1,0,0,0,89,91,1,0,0,0,90,84,1,0,0,0,90,91,1,
        0,0,0,91,24,1,0,0,0,92,96,7,0,0,0,93,95,7,1,0,0,94,93,1,0,0,0,95,
        98,1,0,0,0,96,94,1,0,0,0,96,97,1,0,0,0,97,26,1,0,0,0,98,96,1,0,0,
        0,99,104,5,39,0,0,100,103,3,37,18,0,101,103,8,2,0,0,102,100,1,0,
        0,0,102,101,1,0,0,0,103,106,1,0,0,0,104,102,1,0,0,0,104,105,1,0,
        0,0,105,107,1,0,0,0,106,104,1,0,0,0,107,108,5,39,0,0,108,28,1,0,
        0,0,109,110,7,3,0,0,110,30,1,0,0,0,111,112,7,4,0,0,112,32,1,0,0,
        0,113,124,5,62,0,0,114,115,5,62,0,0,115,124,5,61,0,0,116,124,5,60,
        0,0,117,118,5,60,0,0,118,124,5,61,0,0,119,120,5,60,0,0,120,124,5,
        62,0,0,121,122,5,61,0,0,122,124,5,61,0,0,123,113,1,0,0,0,123,114,
        1,0,0,0,123,116,1,0,0,0,123,117,1,0,0,0,123,119,1,0,0,0,123,121,
        1,0,0,0,124,34,1,0,0,0,125,126,5,97,0,0,126,127,5,110,0,0,127,131,
        5,100,0,0,128,129,5,111,0,0,129,131,5,114,0,0,130,125,1,0,0,0,130,
        128,1,0,0,0,131,36,1,0,0,0,132,133,5,92,0,0,133,134,5,39,0,0,134,
        38,1,0,0,0,135,139,5,35,0,0,136,138,8,5,0,0,137,136,1,0,0,0,138,
        141,1,0,0,0,139,137,1,0,0,0,139,140,1,0,0,0,140,142,1,0,0,0,141,
        139,1,0,0,0,142,143,6,19,0,0,143,40,1,0,0,0,144,145,7,6,0,0,145,
        146,1,0,0,0,146,147,6,20,0,0,147,42,1,0,0,0,11,0,77,82,88,90,96,
        102,104,123,130,139,1,6,0,0
    ]

class MMSuiteLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    NUMINT = 11
    NUMREAL = 12
    VARIAVEL = 13
    CADEIA = 14
    OP_ARIT1 = 15
    OP_ARIT2 = 16
    OP_REL = 17
    OP_BOOL = 18
    COMENTARIO = 19
    WS = 20

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "'func'", "'('", "')'", "'='", "'if'", "'{'", "'}'", 
            "'else'", "'while'" ]

    symbolicNames = [ "<INVALID>",
            "NUMINT", "NUMREAL", "VARIAVEL", "CADEIA", "OP_ARIT1", "OP_ARIT2", 
            "OP_REL", "OP_BOOL", "COMENTARIO", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "NUMINT", "NUMREAL", "VARIAVEL", 
                  "CADEIA", "OP_ARIT1", "OP_ARIT2", "OP_REL", "OP_BOOL", 
                  "ESC_SEQ", "COMENTARIO", "WS" ]

    grammarFileName = "MMSuite.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


