# Generated from MMSuite.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,186,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,
        0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,
        8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,
        13,1,13,1,13,1,13,1,13,1,13,1,14,4,14,107,8,14,11,14,12,14,108,1,
        15,4,15,112,8,15,11,15,12,15,113,1,15,1,15,4,15,118,8,15,11,15,12,
        15,119,3,15,122,8,15,1,16,1,16,5,16,126,8,16,10,16,12,16,129,9,16,
        1,17,1,17,1,17,5,17,134,8,17,10,17,12,17,137,9,17,1,17,1,17,1,18,
        1,18,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        3,20,155,8,20,1,21,1,21,1,21,1,21,1,21,3,21,162,8,21,1,22,1,22,1,
        22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,5,24,176,8,24,10,
        24,12,24,179,9,24,1,24,1,24,1,25,1,25,1,25,1,25,0,0,26,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,0,49,24,51,25,
        1,0,7,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,2,0,39,39,92,
        92,2,0,43,43,45,45,2,0,42,42,47,47,1,0,10,10,3,0,9,10,13,13,32,32,
        198,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
        1,53,1,0,0,0,3,55,1,0,0,0,5,57,1,0,0,0,7,64,1,0,0,0,9,69,1,0,0,0,
        11,71,1,0,0,0,13,76,1,0,0,0,15,83,1,0,0,0,17,85,1,0,0,0,19,87,1,
        0,0,0,21,90,1,0,0,0,23,92,1,0,0,0,25,94,1,0,0,0,27,99,1,0,0,0,29,
        106,1,0,0,0,31,111,1,0,0,0,33,123,1,0,0,0,35,130,1,0,0,0,37,140,
        1,0,0,0,39,142,1,0,0,0,41,154,1,0,0,0,43,161,1,0,0,0,45,163,1,0,
        0,0,47,170,1,0,0,0,49,173,1,0,0,0,51,182,1,0,0,0,53,54,5,40,0,0,
        54,2,1,0,0,0,55,56,5,41,0,0,56,4,1,0,0,0,57,58,5,105,0,0,58,59,5,
        109,0,0,59,60,5,112,0,0,60,61,5,111,0,0,61,62,5,114,0,0,62,63,5,
        116,0,0,63,6,1,0,0,0,64,65,5,102,0,0,65,66,5,114,0,0,66,67,5,111,
        0,0,67,68,5,109,0,0,68,8,1,0,0,0,69,70,5,44,0,0,70,10,1,0,0,0,71,
        72,5,102,0,0,72,73,5,117,0,0,73,74,5,110,0,0,74,75,5,99,0,0,75,12,
        1,0,0,0,76,77,5,112,0,0,77,78,5,121,0,0,78,79,5,116,0,0,79,80,5,
        104,0,0,80,81,5,111,0,0,81,82,5,110,0,0,82,14,1,0,0,0,83,84,5,61,
        0,0,84,16,1,0,0,0,85,86,5,43,0,0,86,18,1,0,0,0,87,88,5,105,0,0,88,
        89,5,102,0,0,89,20,1,0,0,0,90,91,5,123,0,0,91,22,1,0,0,0,92,93,5,
        125,0,0,93,24,1,0,0,0,94,95,5,101,0,0,95,96,5,108,0,0,96,97,5,115,
        0,0,97,98,5,101,0,0,98,26,1,0,0,0,99,100,5,119,0,0,100,101,5,104,
        0,0,101,102,5,105,0,0,102,103,5,108,0,0,103,104,5,101,0,0,104,28,
        1,0,0,0,105,107,2,48,57,0,106,105,1,0,0,0,107,108,1,0,0,0,108,106,
        1,0,0,0,108,109,1,0,0,0,109,30,1,0,0,0,110,112,2,48,57,0,111,110,
        1,0,0,0,112,113,1,0,0,0,113,111,1,0,0,0,113,114,1,0,0,0,114,121,
        1,0,0,0,115,117,5,46,0,0,116,118,2,48,57,0,117,116,1,0,0,0,118,119,
        1,0,0,0,119,117,1,0,0,0,119,120,1,0,0,0,120,122,1,0,0,0,121,115,
        1,0,0,0,121,122,1,0,0,0,122,32,1,0,0,0,123,127,7,0,0,0,124,126,7,
        1,0,0,125,124,1,0,0,0,126,129,1,0,0,0,127,125,1,0,0,0,127,128,1,
        0,0,0,128,34,1,0,0,0,129,127,1,0,0,0,130,135,5,39,0,0,131,134,3,
        47,23,0,132,134,8,2,0,0,133,131,1,0,0,0,133,132,1,0,0,0,134,137,
        1,0,0,0,135,133,1,0,0,0,135,136,1,0,0,0,136,138,1,0,0,0,137,135,
        1,0,0,0,138,139,5,39,0,0,139,36,1,0,0,0,140,141,7,3,0,0,141,38,1,
        0,0,0,142,143,7,4,0,0,143,40,1,0,0,0,144,155,5,62,0,0,145,146,5,
        62,0,0,146,155,5,61,0,0,147,155,5,60,0,0,148,149,5,60,0,0,149,155,
        5,61,0,0,150,151,5,60,0,0,151,155,5,62,0,0,152,153,5,61,0,0,153,
        155,5,61,0,0,154,144,1,0,0,0,154,145,1,0,0,0,154,147,1,0,0,0,154,
        148,1,0,0,0,154,150,1,0,0,0,154,152,1,0,0,0,155,42,1,0,0,0,156,157,
        5,97,0,0,157,158,5,110,0,0,158,162,5,100,0,0,159,160,5,111,0,0,160,
        162,5,114,0,0,161,156,1,0,0,0,161,159,1,0,0,0,162,44,1,0,0,0,163,
        164,5,114,0,0,164,165,5,101,0,0,165,166,5,116,0,0,166,167,5,117,
        0,0,167,168,5,114,0,0,168,169,5,110,0,0,169,46,1,0,0,0,170,171,5,
        92,0,0,171,172,5,39,0,0,172,48,1,0,0,0,173,177,5,35,0,0,174,176,
        8,5,0,0,175,174,1,0,0,0,176,179,1,0,0,0,177,175,1,0,0,0,177,178,
        1,0,0,0,178,180,1,0,0,0,179,177,1,0,0,0,180,181,6,24,0,0,181,50,
        1,0,0,0,182,183,7,6,0,0,183,184,1,0,0,0,184,185,6,25,0,0,185,52,
        1,0,0,0,11,0,108,113,119,121,127,133,135,154,161,177,1,6,0,0
    ]

class MMSuiteLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    NUMINT = 15
    NUMREAL = 16
    VARIAVEL = 17
    CADEIA = 18
    OP_ARIT1 = 19
    OP_ARIT2 = 20
    OP_REL = 21
    OP_BOOL = 22
    RETURN = 23
    COMENTARIO = 24
    WS = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'import'", "'from'", "','", "'func'", "'python'", 
            "'='", "'+'", "'if'", "'{'", "'}'", "'else'", "'while'", "'return'" ]

    symbolicNames = [ "<INVALID>",
            "NUMINT", "NUMREAL", "VARIAVEL", "CADEIA", "OP_ARIT1", "OP_ARIT2", 
            "OP_REL", "OP_BOOL", "RETURN", "COMENTARIO", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "NUMINT", "NUMREAL", "VARIAVEL", "CADEIA", "OP_ARIT1", 
                  "OP_ARIT2", "OP_REL", "OP_BOOL", "RETURN", "ESC_SEQ", 
                  "COMENTARIO", "WS" ]

    grammarFileName = "MMSuite.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


