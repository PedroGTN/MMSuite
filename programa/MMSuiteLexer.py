# Generated from MMSuite.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,23,170,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,1,0,1,0,1,1,1,1,1,2,1,
        2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,
        6,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,
        1,11,1,11,1,11,1,11,1,12,4,12,91,8,12,11,12,12,12,92,1,13,4,13,96,
        8,13,11,13,12,13,97,1,13,1,13,4,13,102,8,13,11,13,12,13,103,3,13,
        106,8,13,1,14,1,14,5,14,110,8,14,10,14,12,14,113,9,14,1,15,1,15,
        1,15,5,15,118,8,15,10,15,12,15,121,9,15,1,15,1,15,1,16,1,16,1,17,
        1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,139,
        8,18,1,19,1,19,1,19,1,19,1,19,3,19,146,8,19,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,5,22,160,8,22,10,22,12,22,
        163,9,22,1,22,1,22,1,23,1,23,1,23,1,23,0,0,24,1,1,3,2,5,3,7,4,9,
        5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,43,0,45,22,47,23,1,0,7,2,0,65,90,97,
        122,4,0,48,57,65,90,95,95,97,122,2,0,39,39,92,92,2,0,43,43,45,45,
        2,0,42,42,47,47,1,0,10,10,3,0,9,10,13,13,32,32,182,0,1,1,0,0,0,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,45,
        1,0,0,0,0,47,1,0,0,0,1,49,1,0,0,0,3,51,1,0,0,0,5,53,1,0,0,0,7,55,
        1,0,0,0,9,60,1,0,0,0,11,67,1,0,0,0,13,69,1,0,0,0,15,71,1,0,0,0,17,
        74,1,0,0,0,19,76,1,0,0,0,21,78,1,0,0,0,23,83,1,0,0,0,25,90,1,0,0,
        0,27,95,1,0,0,0,29,107,1,0,0,0,31,114,1,0,0,0,33,124,1,0,0,0,35,
        126,1,0,0,0,37,138,1,0,0,0,39,145,1,0,0,0,41,147,1,0,0,0,43,154,
        1,0,0,0,45,157,1,0,0,0,47,166,1,0,0,0,49,50,5,40,0,0,50,2,1,0,0,
        0,51,52,5,41,0,0,52,4,1,0,0,0,53,54,5,44,0,0,54,6,1,0,0,0,55,56,
        5,102,0,0,56,57,5,117,0,0,57,58,5,110,0,0,58,59,5,99,0,0,59,8,1,
        0,0,0,60,61,5,112,0,0,61,62,5,121,0,0,62,63,5,116,0,0,63,64,5,104,
        0,0,64,65,5,111,0,0,65,66,5,110,0,0,66,10,1,0,0,0,67,68,5,61,0,0,
        68,12,1,0,0,0,69,70,5,43,0,0,70,14,1,0,0,0,71,72,5,105,0,0,72,73,
        5,102,0,0,73,16,1,0,0,0,74,75,5,123,0,0,75,18,1,0,0,0,76,77,5,125,
        0,0,77,20,1,0,0,0,78,79,5,101,0,0,79,80,5,108,0,0,80,81,5,115,0,
        0,81,82,5,101,0,0,82,22,1,0,0,0,83,84,5,119,0,0,84,85,5,104,0,0,
        85,86,5,105,0,0,86,87,5,108,0,0,87,88,5,101,0,0,88,24,1,0,0,0,89,
        91,2,48,57,0,90,89,1,0,0,0,91,92,1,0,0,0,92,90,1,0,0,0,92,93,1,0,
        0,0,93,26,1,0,0,0,94,96,2,48,57,0,95,94,1,0,0,0,96,97,1,0,0,0,97,
        95,1,0,0,0,97,98,1,0,0,0,98,105,1,0,0,0,99,101,5,46,0,0,100,102,
        2,48,57,0,101,100,1,0,0,0,102,103,1,0,0,0,103,101,1,0,0,0,103,104,
        1,0,0,0,104,106,1,0,0,0,105,99,1,0,0,0,105,106,1,0,0,0,106,28,1,
        0,0,0,107,111,7,0,0,0,108,110,7,1,0,0,109,108,1,0,0,0,110,113,1,
        0,0,0,111,109,1,0,0,0,111,112,1,0,0,0,112,30,1,0,0,0,113,111,1,0,
        0,0,114,119,5,39,0,0,115,118,3,43,21,0,116,118,8,2,0,0,117,115,1,
        0,0,0,117,116,1,0,0,0,118,121,1,0,0,0,119,117,1,0,0,0,119,120,1,
        0,0,0,120,122,1,0,0,0,121,119,1,0,0,0,122,123,5,39,0,0,123,32,1,
        0,0,0,124,125,7,3,0,0,125,34,1,0,0,0,126,127,7,4,0,0,127,36,1,0,
        0,0,128,139,5,62,0,0,129,130,5,62,0,0,130,139,5,61,0,0,131,139,5,
        60,0,0,132,133,5,60,0,0,133,139,5,61,0,0,134,135,5,60,0,0,135,139,
        5,62,0,0,136,137,5,61,0,0,137,139,5,61,0,0,138,128,1,0,0,0,138,129,
        1,0,0,0,138,131,1,0,0,0,138,132,1,0,0,0,138,134,1,0,0,0,138,136,
        1,0,0,0,139,38,1,0,0,0,140,141,5,97,0,0,141,142,5,110,0,0,142,146,
        5,100,0,0,143,144,5,111,0,0,144,146,5,114,0,0,145,140,1,0,0,0,145,
        143,1,0,0,0,146,40,1,0,0,0,147,148,5,114,0,0,148,149,5,101,0,0,149,
        150,5,116,0,0,150,151,5,117,0,0,151,152,5,114,0,0,152,153,5,110,
        0,0,153,42,1,0,0,0,154,155,5,92,0,0,155,156,5,39,0,0,156,44,1,0,
        0,0,157,161,5,35,0,0,158,160,8,5,0,0,159,158,1,0,0,0,160,163,1,0,
        0,0,161,159,1,0,0,0,161,162,1,0,0,0,162,164,1,0,0,0,163,161,1,0,
        0,0,164,165,6,22,0,0,165,46,1,0,0,0,166,167,7,6,0,0,167,168,1,0,
        0,0,168,169,6,23,0,0,169,48,1,0,0,0,11,0,92,97,103,105,111,117,119,
        138,145,161,1,6,0,0
    ]

class MMSuiteLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    NUMINT = 13
    NUMREAL = 14
    VARIAVEL = 15
    CADEIA = 16
    OP_ARIT1 = 17
    OP_ARIT2 = 18
    OP_REL = 19
    OP_BOOL = 20
    RETURN = 21
    COMENTARIO = 22
    WS = 23

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "','", "'func'", "'python'", "'='", "'+'", "'if'", 
            "'{'", "'}'", "'else'", "'while'", "'return'" ]

    symbolicNames = [ "<INVALID>",
            "NUMINT", "NUMREAL", "VARIAVEL", "CADEIA", "OP_ARIT1", "OP_ARIT2", 
            "OP_REL", "OP_BOOL", "RETURN", "COMENTARIO", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "NUMINT", "NUMREAL", 
                  "VARIAVEL", "CADEIA", "OP_ARIT1", "OP_ARIT2", "OP_REL", 
                  "OP_BOOL", "RETURN", "ESC_SEQ", "COMENTARIO", "WS" ]

    grammarFileName = "MMSuite.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


